name: build-test

# trigger on any push
# but not on master or tags
# and only for Dockerfile related modifications
on:
  push:
    tags-ignore:
      - "**"
    branches:
      - "**"
      - "!master"
    paths:
      - "Dockerfile"
      - "supported_versions.json"
      - "hashicorp.asc"
      - "tests/*"
      - ".dockerignore"
      - ".github/workflows/build-test.yml"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  load_supported_versions:
    uses: ./.github/workflows/supported-versions.yml


  build:
    runs-on: ubuntu-20.04
    needs: load_supported_versions
    strategy:
      matrix: ${{ fromJSON(needs.load_supported_versions.outputs.matrix) }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Save branch name as env var
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build and save image tag
        run: echo "IMAGE_TAG=${BRANCH}_terraform-${{ matrix.tf_version }}_azcli-${{ matrix.azcli_version }}" >> $GITHUB_ENV

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        with:
          cosign-release: 'v1.13.1'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@16c0bc4a6e6ada2cfd8afd41d22d95379cf7c32a

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Get and save release tag
        run: echo "RELEASE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build and save image release tag
        run: echo "IMAGE_RELEASE_TAG=release-${{ steps.meta.outputs.tags }}_terraform-${{ matrix.tf_version }}_azcli-${{ matrix.azcli_version }}" >> $GITHUB_ENV

      - name: view tags
        id: view_tags
        run: |
          echo ${{ steps.meta.outputs.tags }}
          echo ${IMAGE_RELEASE_TAG}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${IMAGE_RELEASE_TAG}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            AZ_VERSION=${{ matrix.azcli_version }}
            TF_VERSION=${{ matrix.tf_version }}


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}

  test:
    runs-on: ubuntu-20.04
    needs:
      - build
      - load_supported_versions
    strategy:
      matrix: ${{ fromJSON(needs.load_supported_versions.outputs.matrix) }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Save branch name as env var
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build and save image tag
        run: echo "IMAGE_TAG=${BRANCH}_terraform-${{ matrix.tf_version }}_azcli-${{ matrix.azcli_version }}" >> $GITHUB_ENV

      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.IMAGE_NAME }}_${{ env.IMAGE_TAG }}

      - name: Load image
        run: docker image load --input ${{ env.IMAGE_NAME }}_${{ env.IMAGE_TAG }}.tar

      - name: Generate test config
        run: |
          export TF_VERSION=${{ matrix.tf_version }}
          export AZ_VERSION=${{ matrix.azcli_version }}
          envsubst '${TF_VERSION},${AZ_VERSION}' < tests/container-structure-tests.yml.template > tests/container-structure-tests.yml

      - name: run structure tests
        uses: plexsystems/container-structure-test-action@v0.3.0
        with:
          image: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          config: tests/container-structure-tests.yml
